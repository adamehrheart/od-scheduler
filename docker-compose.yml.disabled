version: '3.8'

services:
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: od-scheduler
    profiles: ["dev"]
    environment:
      - PORT=3003
      - NODE_ENV=development
      # Temporary environment variables for testing
      - SFTPGO_DB_HOST=localhost
      - SFTPGO_DB_PORT=5433
      - SFTPGO_DB_NAME=sftpgo
      - SFTPGO_DB_USER=sftpgo
      - SFTPGO_DB_PASSWORD=sftpgo
      - MAIN_DB_HOST=localhost
      - MAIN_DB_PORT=5432
      - MAIN_DB_NAME=postgres
      - MAIN_DB_USER=postgres
      - MAIN_DB_PASSWORD=postgres
      - OD_CMS_URL=http://localhost:3002
      - REDIS_URL=redis://localhost:6379
    ports:
      - "3003:3003"
    volumes:
      - ./src:/app/src:ro
      - ./package.json:/app/package.json:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      - ./dist:/app/dist
    command: ["npm", "run", "dev"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add database service if needed
  # db:
  #   image: postgres:15-alpine
  #   container_name: od-scheduler-db
  #   environment:
  #     - POSTGRES_DB=scheduler
  #     - POSTGRES_USER=scheduler
  #     - POSTGRES_PASSWORD=scheduler
  #   ports:
  #     - "5434:5432"
  #   volumes:
  #     - scheduler-db-data:/var/lib/postgresql/data
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U scheduler -d scheduler"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 40s

# volumes:
#   scheduler-db-data:
